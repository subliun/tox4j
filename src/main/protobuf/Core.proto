package im.tox.tox4j.core.proto;

option optimize_for = LITE_RUNTIME;


enum Socket {
    NONE    = 1;
    TCP4    = 2;
    TCP6    = 3;
    UDP4    = 4;
    UDP6    = 5;
}

message ConnectionStatus {
    required Socket connectionStatus = 1;
}

message FileControl {
    enum Kind {
        RESUME  = 1;
        PAUSE   = 2;
        CANCEL  = 3;
    }

    required uint32 friendNumber    = 1;
    required uint32 fileNumber      = 2;
    required Kind   control         = 3;
}

message FileReceive {
    enum Kind {
        DATA    = 1;
        AVATAR  = 2;
    }

    required uint32 friendNumber    = 1;
    required uint32 fileNumber      = 2;
    required Kind   kind            = 3;
    required uint64 fileSize        = 4;
    required bytes  filename        = 5;
}

message FileReceiveChunk {
    required uint32 friendNumber    = 1;
    required uint32 fileNumber      = 2;
    required uint64 position        = 3;
    required bytes  data            = 4;
}

message FileRequestChunk {
    required uint32 friendNumber    = 1;
    required uint32 fileNumber      = 2;
    required uint64 position        = 3;
    required uint32 length          = 4;
}

message FriendAction {
    required uint32 friendNumber    = 1;
    required uint32 timeDelta       = 2;
    required bytes  action          = 3;
}

message FriendConnectionStatus {
    required uint32 friendNumber    = 1;
    required Socket connectionStatus = 2;
}

message FriendMessage {
    required uint32 friendNumber    = 1;
    required uint32 timeDelta       = 2;
    required bytes  message         = 3;
}

message FriendName {
    required uint32 friendNumber    = 1;
    required bytes  name            = 2;
}

message FriendRequest {
    required bytes  publicKey       = 1;
    required uint32 timeDelta       = 2;
    required bytes  message         = 3;
}

message FriendStatus {
    enum Kind {
        NONE    = 1;
        AWAY    = 2;
        BUSY    = 3;
    }

    required uint32 friendNumber    = 1;
    required Kind   status          = 2;
}

message FriendStatusMessage {
    required uint32 friendNumber    = 1;
    required bytes  message         = 2;
}

message FriendTyping {
    required uint32 friendNumber    = 1;
    required bool   isTyping        = 2;
}

message FriendLosslessPacket {
    required uint32 friendNumber    = 1;
    required bytes  data            = 2;
}

message FriendLossyPacket {
    required uint32 friendNumber    = 1;
    required bytes  data            = 2;
}

message ReadReceipt {
    required uint32 friendNumber    = 1;
    required uint32 messageId       = 2;
}

message GroupInvite {
    required uint32 friendNumber     = 1;
    required bytes  inviteData       = 2;
}

message GroupMessage {
    required uint32 groupNumber     = 1;
    required uint32 peerNumber      = 2;
    required uint32 timeDelta       = 3;
    required bytes  message         = 4;
}

message GroupPrivateMessage {
    required uint32 groupNumber     = 1;
    required uint32 peerNumber      = 2;
    required uint32 timeDelta       = 3;
    required bytes  message         = 4;
}

message GroupAction {
    required uint32 groupNumber     = 1;
    required uint32 peerNumber      = 2;
    required uint32 timeDelta       = 3;
    required bytes  message         = 4;
}

message GroupNickChange {
    required uint32 groupNumber     = 1;
    required uint32 peerNumber      = 2;
    required bytes  newNick         = 3;
}

message GroupTopicChange {
    required uint32 groupNumber     = 1;
    required uint32 peerNumber      = 2;
    required bytes  topic           = 3;
}

message GroupPeerJoin {
    required uint32 groupNumber     = 1;
    required uint32 peerNumber      = 2;
}

message GroupPeerExit {
    required uint32 groupNumber     = 1;
    required uint32 peerNumber      = 2;
    required bytes partMessage      = 3;
}

message GroupSelfJoin {
    required uint32 groupNumber     = 1;
}

message GroupPeerlistUpdate {
    required uint32 groupNumber     = 1;
}

message GroupSelfTimeout {
    required uint32 groupNumber     = 1;
}

message GroupRejected {
    enum Kind {
        NICK_TAKEN          = 1;
        GROUP_FULL          = 2;
        INVITES_DISABLED    = 3;
        INVITE_FAILED       = 4;
    }
    required uint32 groupNumber     = 1;
    required Kind   type            = 2;
}

message CoreEvents {
    repeated ConnectionStatus       connectionStatus       =  1;
    repeated FileControl            fileControl            =  2;
    repeated FileReceive            fileReceive            =  3;
    repeated FileReceiveChunk       fileReceiveChunk       =  4;
    repeated FileRequestChunk       fileRequestChunk       =  5;
    repeated FriendAction           friendAction           =  6;
    repeated FriendConnectionStatus friendConnectionStatus =  7;
    repeated FriendMessage          friendMessage          =  8;
    repeated FriendName             friendName             =  9;
    repeated FriendRequest          friendRequest          = 10;
    repeated FriendStatus           friendStatus           = 11;
    repeated FriendStatusMessage    friendStatusMessage    = 12;
    repeated FriendTyping           friendTyping           = 13;
    repeated FriendLosslessPacket   friendLosslessPacket   = 14;
    repeated FriendLossyPacket      friendLossyPacket      = 15;
    repeated ReadReceipt            readReceipt            = 16;
    repeated GroupInvite            groupInvite            = 17;
    repeated GroupMessage           groupMessage           = 18;
    repeated GroupPrivateMessage    groupPrivateMessage    = 19;
    repeated GroupAction            groupAction            = 20;
    repeated GroupNickChange        groupNickChange        = 21;
    repeated GroupTopicChange       groupTopicChange       = 22;
    repeated GroupPeerJoin          groupPeerJoin          = 23;
    repeated GroupPeerExit          groupPeerExit          = 24;
    repeated GroupSelfJoin          groupSelfJoin          = 25;
    repeated GroupPeerlistUpdate    groupPeerlistUpdate    = 26;
    repeated GroupSelfTimeout       groupSelfTimeout       = 27;
    repeated GroupRejected          groupRejected          = 28;
}
